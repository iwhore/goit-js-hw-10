{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport iconError from '../img/icon-error.png';\n\nconst showDays = document.querySelector('[data-days]');\nconst showHours = document.querySelector('[data-hours]');\nconst showMinutes = document.querySelector('[data-minutes]');\nconst showSeconds = document.querySelector('[data-seconds]');\nconst inputfield = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\n\n// Перевірка на майбутню дату під час ініціалізації сторінки\nconst currentDate = new Date().getTime();\nconst selectedDate = new Date(inputfield.value).getTime();\nif (selectedDate <= currentDate) {\n  startBtn.disabled = true;\n}\n\nstartBtn.addEventListener('click', () => {\n  const selectedDate = new Date(inputfield.value).getTime();\n  const currentDate = new Date().getTime();\n  \n  if (selectedDate > currentDate) {\n    startBtn.disabled = true;\n    inputfield.disabled = true;\n    startTimer(selectedDate);\n  } else {\n    iziToast.error({\n      iconUrl: iconError,\n      message: 'Please choose a date in the future',\n      position: 'topCenter',\n      backgroundColor: '#ef4040',\n      titleColor: '#FFFFFF',\n      messageColor: '#FFFFFF',\n      theme: 'dark',\n    });\n  }\n});\n\nconst options = {\n  defaultDate: new Date(),\n  enableTime: true,\n  time_24hr: true,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = new Date(selectedDates[0]).getTime();\n    const currentDate = new Date().getTime();\n\n    if (selectedDate <= currentDate) {\n      startBtn.disabled = true;\n      iziToast.error({\n        iconUrl: iconError,\n          message: 'Please choose a date in the future',\n          position: 'topCenter',\n          backgroundColor: '#ef4040',\n          titleColor: '#FFFFFF',\n          messageColor: '#FFFFFF',\n          theme: 'dark',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  }\n};\n\nlet timeDifference; \nlet intervalId;        \n\nflatpickr('#datetime-picker', options);\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  showDays.textContent = `${days}`;\n  showHours.textContent = `${hours}`;\n  showMinutes.textContent = `${minutes}`;\n  showSeconds.textContent = `${seconds}`;\n}\n\nfunction startTimer(selectedDate) {\n  clearInterval(intervalId);\n  timeDifference = selectedDate - Date.now();\n  intervalId = setInterval(timer, 1000);\n}\n\nfunction timer() {\n  if (timeDifference > 1000) {\n    timeDifference -= 1000;\n    updateClockface(convertMs(timeDifference))\n  } else {\n    clearInterval(intervalId);\n    inputfield.disabled = false;\n  }\n}\n\nfunction addLeadingZero(value){\n  return String(value).padStart(2, \"0\");\n}\n\nfunction convertMs(time) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  \n  // Remaining days\n  const days = addLeadingZero(Math.floor(time / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((time % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((time % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(Math.floor((((time % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}"],"names":["showDays","showHours","showMinutes","showSeconds","inputfield","startBtn","currentDate","selectedDate","startTimer","iziToast","iconError","options","selectedDates","timeDifference","intervalId","flatpickr","updateClockface","days","hours","minutes","seconds","timer","convertMs","addLeadingZero","value","time"],"mappings":"2GAQA,MAAMA,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,cAAc,EAGhDC,EAAc,IAAI,OAAO,UACzBC,EAAe,IAAI,KAAKH,EAAW,KAAK,EAAE,QAAO,EACnDG,GAAgBD,IAClBD,EAAS,SAAW,IAGtBA,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAME,EAAe,IAAI,KAAKH,EAAW,KAAK,EAAE,UAC1CE,EAAc,IAAI,KAAM,EAAC,QAAO,EAElCC,EAAeD,GACjBD,EAAS,SAAW,GACpBD,EAAW,SAAW,GACtBI,EAAWD,CAAY,GAEvBE,EAAS,MAAM,CACb,QAASC,EACT,QAAS,qCACT,SAAU,YACV,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,MAAO,MACb,CAAK,CAEL,CAAC,EAED,MAAMC,EAAU,CACd,YAAa,IAAI,KACjB,WAAY,GACZ,UAAW,GACX,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAML,EAAe,IAAI,KAAKK,EAAc,CAAC,CAAC,EAAE,UAC1CN,EAAc,IAAI,KAAM,EAAC,QAAO,EAElCC,GAAgBD,GAClBD,EAAS,SAAW,GACpBI,EAAS,MAAM,CACb,QAASC,EACP,QAAS,qCACT,SAAU,YACV,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,MAAO,MACjB,CAAO,GAEDL,EAAS,SAAW,EAEvB,CACH,EAEA,IAAIQ,EACAC,EAEJC,EAAU,mBAAoBJ,CAAO,EAErC,SAASK,EAAgB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DpB,EAAS,YAAc,GAAGiB,CAAI,GAC9BhB,EAAU,YAAc,GAAGiB,CAAK,GAChChB,EAAY,YAAc,GAAGiB,CAAO,GACpChB,EAAY,YAAc,GAAGiB,CAAO,EACtC,CAEA,SAASZ,EAAWD,EAAc,CAChC,cAAcO,CAAU,EACxBD,EAAiBN,EAAe,KAAK,MACrCO,EAAa,YAAYO,EAAO,GAAI,CACtC,CAEA,SAASA,GAAQ,CACXR,EAAiB,KACnBA,GAAkB,IAClBG,EAAgBM,EAAUT,CAAc,CAAC,IAEzC,cAAcC,CAAU,EACxBV,EAAW,SAAW,GAE1B,CAEA,SAASmB,EAAeC,EAAM,CAC5B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAM,CAQvB,MAAMR,EAAOM,EAAe,KAAK,MAAME,EAAO,KAAG,CAAC,EAE5CP,EAAQK,EAAe,KAAK,MAAOE,EAAO,MAAO,IAAI,CAAC,EAEtDN,EAAUI,EAAe,KAAK,MAAQE,EAAO,MAAO,KAAQ,GAAM,CAAC,EAEnEL,EAAUG,EAAe,KAAK,MAASE,EAAO,MAAO,KAAQ,IAAU,GAAM,CAAC,EAEpF,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}